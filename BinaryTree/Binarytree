using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BinaryTreeProject
{
    //class Node
    //{
    //    public Node left;
    //    public Node right;
    //    public int value;

    //    public Node(int value)
    //    {
    //        this.value = value;
    //        left = null;
    //        right = null;
    //    }
    //}



    class BinaryTree
    {
        public BinaryTree left;
        public BinaryTree right;
        public int? value = null;

        public BinaryTree()
        {
            //this.value = value;
            //left = null;
            //right = null;
        }

        public void Insert(int value)
        {
            if(this.value == null)
            {
                this.value = value;
                return;
            }
            if(this.value < value)
            {
                if(left == null)
                {
                    left = new BinaryTree();
                    left.value = value;
                }
                else
                {
                    left.Insert(value);
                }
            }

            if (this.value > value)
            {
                if (right == null)
                {
                    right = new BinaryTree();
                    right.value = value;
                }
                else
                {
                    right.Insert(value);
                }
            }
        }






        public void Delete(int? value)
        {

            if(this.value == value)
            {
                this.value = null;
                Console.Out.WriteLine("Deleted " + value);
                return;
            }
            else if(this.value < value && left.value != null)
            {
                left.Delete(value);
            }
            else if(this.value < value && right.value != null)
            {
                right.Delete(value);
            }

            //if (left.value != null)
            //{
            //    if (left.value == this.value)
            //    {
            //        left.value = null;
            //        Console.Out.WriteLine("Deleted " + this.value);
            //    }
            //    else if (left.value < this.value)
            //    {
            //        left.Delete(this.value);
            //    }
            //}


            //if (left.value != null)
            //{
            //    if (right.value == this.value)
            //    {
            //        right.value = null;
            //        Console.Out.WriteLine("Deleted " + this.value);
            //    }
            //    else if (right.value < this.value)
            //    {
            //        right.Delete(this.value);
            //    }
            //}
        }
            
            
        

        public int Search(int value)
        {
            return 1;
        }

        public int Traverse()
        {
            return 1;
        }

    }
}
